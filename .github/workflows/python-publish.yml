name: Publish Python Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: false
        type: boolean
      bump_type:
        description: 'Version bump type (major, minor, patch)'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./python
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Auto-bump version for manual dispatch
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        python bump_version.py ${{ github.event.inputs.bump_type }}
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Auto-bump version (${{ github.event.inputs.bump_type }})" || exit 0
        git push
    
    - name: Build package
      run: python -m build
    
    - name: Publish to Test PyPI
      if: ${{ github.event.inputs.test_pypi == 'true' }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        python -m twine upload --repository testpypi dist/*
    
    - name: Publish to PyPI
      if: ${{ github.event_name == 'release' && github.event.action == 'published' || (github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi != 'true') }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m twine upload dist/*